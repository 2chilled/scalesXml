## Scales Xml 0.3

This is a feature release, adding a the full set of useful XPath Axe, string based XPath evaluation - via a popular open source XPath library and many smaller improvements in syntax and usability.

This version has been built with xsbt 0.11.x.  The next major version (hopefully released soon) will target Scalaz 7's new Iteratee framework, and likely provide IO based processing.  (Oh yeah and a probably move to GitHub/Git)

### All the Axe you'll ever need

Scales 0.3 adds the following axe:

* preceding-sibling (preceding_sibling_::)
* following-sibling (following_sibling_::)
* descendant (descendant_::)
* following (following_::)
* preceding (preceding_::)
* ancestor (ancestor_::)
* ancestor-or-self (ancestor_or_self_::)
* descendant-or-self (descendant_or_self_::)

This provides (namespace exluded all of the XPath 1 and 2 axe)

### Enhanced internal XPath queries

* position() (pos)
** pos_<, pos_==, pos_>
* last() (last)
** last_<, last_==, last_>
* position() == last() (pos_eq_last)
* Easier to extend and re-use queries
** xfilter, xmap, xflatMap

### String base XPath evaluation

* Evaluate normal XPath 1.0 strings but get back XmlPath's
* Evaluates to an Iterable[Either[AttributePath, XmlPath]] or,
* get[T] a value directly from XPath 1.0 (e.g. get[String]("normalize(//*)")) 
* Allows querying for the few predicates and XPaths that Scales cannot process (and dynamic queries of course)
* Optional dependency

### Extra Fun

* Forwards and Backwards Path Iterators (used by following and preceding)
* DuplicateFilter now works with the Scalaz Equal typeclass
* Using AttributeQNames with the tuple arrow now creates QNames as you'd expect 
* DslBuilder allows direct manipulation of trees via folding
* Simplify the Builder usage why /(<(Elem(... ) when you can just /(Elem)?
* Java 1.7 JAXP implementation checks - Schema validation is optimised (no serialization)

### Bug fixes

* Fixed stream handling in pull parsers
* iterate returning an Iterable